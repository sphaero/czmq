/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/

#ifndef QML_ZUDP_H
#define QML_ZUDP_H

#include <QtQml>

#include <czmq.h>
#include "qml_czmq_plugin.h"


class QmlZudp : public QObject
{
    Q_OBJECT
    Q_PROPERTY(bool isNULL READ isNULL)

public:
    zudp_t *self;

    QmlZudp() { self = NULL; }
    bool isNULL() { return self == NULL; }

    static QObject* qmlAttachedProperties(QObject* object); // defined in QmlZudp.cpp

public slots:
    //  Send zframe to UDP socket to given address and port,
    //  return -1 if sending failed (i.e. due to interface having
    //  disappeared (happens easily with WiFi))
    int sendto (QmlZframe *frame, const QString &address, int port);

    //  Receive zframe from UDP socket, and set address of peer that sent it
    //  The peername must be a char [INET_ADDRSTRLEN] array if IPv6 is disabled or
    //  NI_MAXHOST if it's enabled. Returns NULL when failing to get peer address.
    QmlZframe *recv (const QString &peername, int peerlen);

    //  Bind a socket to a and address and port number.
    //  On failure, returns -1.
    int bind (const QString &address, int port);

    //  Return the socket's filedescriptor
    int fd ();
};

class QmlZudpAttached : public QObject
{
    Q_OBJECT
    QObject* m_attached;

public:
    QmlZudpAttached (QObject* attached) {
        Q_UNUSED (attached);
    };

public slots:
    //  Handle an I/O error on some socket operation; will report and die on
    //  fatal errors, and continue silently on "try again" errors.
    void error (const QString &reason);

    //  Self test of this class.
    void test (bool verbose);

    //  Create UDP socket of the given type. Set the reuse option if
    //  you need to reuse the socket's address.
    QmlZudp *construct (int type, bool reuse);

    //  Close a UDP socket
    void destruct (QmlZudp *qmlSelf);
};


QML_DECLARE_TYPEINFO(QmlZudp, QML_HAS_ATTACHED_PROPERTIES)

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
